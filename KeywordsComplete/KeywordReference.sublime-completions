{
	"scope": "source.autoit",
	"completions": [
		{"trigger" : "Volatile", "contents": "Volatile "},
		{"trigger": "And 	 Logical operators", "contents": "And "},
		{"trigger": "ByRef", "contents": "ByRef "},
		{"trigger": "Case", "contents": "Case ${2:value}${3: To ${4:value}}\n\t$5"},
		{"trigger": "Const 		Declare a variable,", "contents": "Const "},
		{"trigger": "ContinueCase 	Abort the code in the current Case block and continue with the code in the next Case block when in a Select or Switch structure", "contents": "ContinueCase"},
		{"trigger": "ContinueLoop 	Continue a While/Do/For loop", "contents": "ContinueLoop ${1:[Level]}"},
		{"trigger": "Default 	Keyword value use in function call", "contents": "Default"},
		{"trigger": "Dim 	Declare a variable, a constant, or create an array", "contents": "Dim \\$"},
		{"trigger": "Do			Loop based on an expression", "contents": "Do \n\t${1:statements}\nUntil ${2:expression}"},
		{"trigger": "Else", "contents": "Else\n"},
		{"trigger": "ElseIf", "contents": "ElseIf ${1:expression} Then\n${2:statements}${3:\nElseIf ${4:expression} Then\n${5:statements}}"},
		{"trigger": "EndFunc", "contents": "EndFunc\n"},
		{"trigger": "EndIf", "contents": "EndIf\n"},
		{"trigger": "EndSelect", "contents": "EndSelect\n"},
		{"trigger": "EndSwitch", "contents": "EndSwitch"},
		{"trigger": "EndWith", "contents": "EndWith"},
		{"trigger": "Enum 	Enumerates constants", "contents": "Enum "},
		{"trigger": "Exit 	Terminates the script", "contents": "Exit"},
		{"trigger": "ExitLoop 	Terminate a While/Do/For loop", "contents": "ExitLoop"},
		{"trigger": "False", "contents": "False"},
		{"trigger": "For		Enumerates elements in an Object collection or an Array", "contents": "For ${1:variables} In ${2:expression}\n\t${3:statements}\nNext"},
		{"trigger": "For		Loop based on an expression", "contents": "For ${1:variable} = ${2:start} To ${3:stop}${4: Step ${5:stepval}}\n\t${6:statements}\nNext"},
		{"trigger": "Function		New Function", "contents": "Func ${1:function_name}($2)\n\t;code\n\t$3\nEndFunc\n"},
		{"trigger": "Global 	Declare a static variable or create a static array", "contents": "Global  \\$"},
		{"trigger": "If			Conditionally run a single statement", "contents": "If ${1:expression} Then\n\t${2:statements}${3:\nElse\n\t${4:statements}}\nEndIf"},
		{"trigger": "In", "contents": "In "},
		{"trigger": "Local 		Declare a static variable or create a static array", "contents": "Local  \\$"},
		{"trigger": "Next", "contents": "Next\n"},
		{"trigger": "Not 	 Logical operators", "contents": "Not "},
		{"trigger": "Null", "contents": "Null"},
		{"trigger": "Or 	 Logical operators", "contents": "Or "},
		{"trigger": "Redim 		Resize an existing array", "contents": "Redim \\$${1:array_name}"},
		{"trigger": "Return", "contents": "Return "},
		{"trigger": "Select		Conditionally run statements", "contents": "Select\n\tCase ${1:expression}\n\t\t${2:statements}\n\t${3:Case Else\n\t\t$4}\nEndSelect"},
		{"trigger": "Static 	Declare a static variable or create a static array", "contents": "Static ${1:Local \\$} ${2:Global \\$}"},
		{"trigger": "Step", "contents": "Step "},
		{"trigger": "Switch		Conditionally run statements", "contents": "Switch ${1:expression}\n\tCase ${2:value}${3: To ${4:value}}\n\t\t$5\n${6:\tCase Else\n\t\t$7\n}EndSwitch"},
		{"trigger": "Ternary	Conditionally chooses one of two responses based on the result of an expression", "contents": "${1:expression} ? ${2:expression1 if expression is True} : ${3:expression2 if expression is False}"},
		{"trigger": "Then", "contents": "Then\n"},
		{"trigger": "To", "contents": "To "},
		{"trigger": "True", "contents": "True"},
		{"trigger": "Until", "contents": "Until "},
		{"trigger": "WEnd", "contents": "WEnd\n"},
		{"trigger": "While		Loop based on an expression", "contents": "While ${1:expression}\n\t${2:statements}\nWEnd"},
		{"trigger": "With		Used to reduce long references to dot-accessible type of variables", "contents": "With ${1:expression}\n\t${2:statements}\nEndWith\n"}
	]
}